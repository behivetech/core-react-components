// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextFieldControlled should render with the correct props 1`] = `
<TextFieldControlled
  className="mock-class"
  formState={
    Object {
      "formDisabled": false,
      "getFieldError": [MockFunction],
      "getFieldValue": [MockFunction],
      "initialSubmit": false,
      "setFieldValidators": [MockFunction],
      "setFieldValue": [MockFunction],
      "setFieldValueDebounced": [MockFunction],
      "shouldDisable": [MockFunction],
    }
  }
  label="mock-label"
  name="mockName"
  onChange={[Function]}
  value="mock value"
/>
`;

exports[`TextFieldControlled should render with the correct props 2`] = `
<TextField
  className="mock-class"
  label="mock-label"
  name="mockName"
  onChange={[Function]}
  value="mock value"
/>
`;

exports[`TextFieldControlled should render with the correct props 3`] = `
<FormFieldValidation
  className="mock-class"
  component={[Function]}
  formState={
    Object {
      "formDisabled": false,
      "getFieldError": [MockFunction],
      "getFieldValue": [MockFunction],
      "initialSubmit": false,
      "setFieldValidators": [MockFunction],
      "setFieldValue": [MockFunction] {
        "calls": Array [
          Array [
            "mockName",
            "mock value",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "setFieldValueDebounced": [MockFunction],
      "shouldDisable": [MockFunction],
    }
  }
  label="mock-label"
  name="mockName"
  onChange={[Function]}
  validate={
    Object {
      "mockValidate": [MockFunction],
    }
  }
  value="mock value"
/>
`;
